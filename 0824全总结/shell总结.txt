?t15,t16
T5,T14,

stty -echo 去显显示(在屏幕上看不到字母的输入)
stty echo 恢复正常显示

RANDOM函数
shell有一个环境变量RANDOM,范围是0--32767
如果我们想要产生0-25范围内的数：$(($RANDOM%26))

查看有多少远程ip在连接主机（不管是通过ssh还是web和ftp都统计）
 netstat -atn | awk '{print $5}'| sort -nr | uniq -c   
（sort按数字大小排序，uniq将多余重复删除-c是统计重复次数）

seq -w 1 20   显示01到20范围(注意seq -w 1 4 还是1到4，要两两位数才有两位显示)
date +%Y%m%d    20180808的日期格式
awk '/MemFree/{print $2}' /proc/meninfo     内存空闲空间大小
df -h | awk '/\/$/{print $4}'    根分区剩余空间大小

-z  检测字符串长度是否为0，为0返回 true。通常判断一个位置是否有输写，填写
     read -p "input the user "  user  
     if [ -z $user  ] ;then   判断是否有输写user用户

$? 执行上一个指令的返回值 (显示最4后命令的退出状态。0表示没有错误，其他任何值表明有错误)
6 简述预定义变量$$、$?、$0、$#、$*、$!的作用。
 $? 保存命令执行结果的（返回状态）
$0 保存当前运行的（进程名）或（脚本名）
$# 保存位置变量的（个数）
$* 保存所有位置变量的（值）
$$ 保存当前运行进程的（PID）号
$! 保存后台（最后一个进程）的 PID 号


  >:   将前面命令的正确输出,进行重定向
  2>: 将前面命令的错误输出,进行重定向
  &>: 将前面命令的正确与错误输出,进行重定向
  >&2：修改为错误输出
在写BASH脚本时经常看到2>1 和2>&1的写法,经常分不清楚有什么区别.两种写法都可以工作,但差别还是很大的
2>1的作用是把标准错误的输出重定向到1,但这个1不是标准输出,而是一个文件!!!,文件名就是1
2>&1的作用是把标准错误的输出重定向到标准输出1,&指示不要把1当作普通文件,而是fd=1即标准输出来处理

echo -e  "\033[31m 红色字 \033[0m" 
echo -e  "\033[32m 绿色字 \033[0m"
echo -e  "\033[33m 蓝色字 \033[0m"
