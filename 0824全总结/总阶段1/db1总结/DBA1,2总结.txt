DB（数据库）：依照某种数据模型进行组织并存放到存储器的数据集合
DBMS（数据库管理系统）：用来操纵和管理数据库的大型服务
DBS（数据库系统）DB＋DBMS：指带有数据库并整合了数据库管理软件的计算机系统

]#mysql  -hlocalhost   -uroot   -p'密码'
mysql> set global validate_password_policy=0;
mysql> set global validate_password_length=6;
mysql> alter user  root@"localhost" identified by "123456";
mysql> show  databases;
mysql> quit

]#mysql  -hlocalhost   -uroot   -p123456
mysql> show  databases;
show databases;
create database  库名；
select  database();
use  库名；
show tables;
drop  database  库名；

数据库名的命名规则？
3 创建表 （ 相当于系统文件）
* 表必须在库里创建   (use 库名）使用库，进入库
（创建表 查看内容  查看表结构   删除表  写入数据）
create  database  studb;
use studb;
create  table   studb.stuinfo(
name   char(15),
sex      char(10),
age     int,
tel       char(11)  
);
desc  studb.stuinfo;
select  * from studb.stuinfo;

4 插入数据
insert into  studb.stuinfo  values("bob","boy",21,"8888888"),("zhaozhibin","boy",19,"66666666");

select  * from studb.stuinfo;
update studb.stuinfo set sex="girl";
delete from studb.stuinfo;
select  * from  studb.stuinfo;
drop table stuinfo;
show tables;

指定表的字符集 可以存储中文数据
use  studb;
create  table  studb.学生表 (姓名  char(10) , 年龄 int)
DEFAULT CHARSET=utf8;
alter  table  studb.学生表  DEFAULT CHARSET=utf8;
show  create  table  学生表；
insert into studb.学生表  values("张三丰",108);
select  * from  学生表;

MySQL数据类型

数值类型 
整数类型    11   +11
               -11
create  database  db1;
use db1;
create  table t1(level  tinyint);
desc t1;
select  * from t1;
insert into   t1  values(-1);
insert into   t1  values(99);
insert into   t1  values(256);

create  table t2(level  tinyint  unsigned);
desc t2;
select  * from t2;
insert into   t2  values(-1);
insert into   t2  values(99);
insert into   t2  values(256);

浮点类型  
整数.小数   总位数
1029.33        6
create table  t3 (pay  float(5,2));
insert into  t3  values(1118.23);
insert into  t3  values(118.23);
insert into  t3  values(19);
xxx.xx
999.99
-999.99
xxxxx.xx
99999.99
        0.00
-99999.99

字符类型
char（255）定长  
varchar（65532）变长  
create table t5(name char(5))
insert into t5 values ("bob"),("ab");
create table t6(name varchar(5))
insert into t6 values ("bob"),("ab");

大文本类型
text
blob
/root/media/film/xxx.avi
 音频文件   图片   视频文件

class nsd1804 char(7)
email varchar(30)
xxxx@163.com
        @yahoo.net
        @sina.com.cn
create table t7 (
gamename char(15),level smallint unsigned,pay float(7,2));
desc  t7;
insert into t7 values("zbj",250,1880.22);

枚举类型：让字段的值在规定的范围内选择
enum(值列表) 单选
set(值列表) 多选 (不能用like（关键字）)
添加set多选格式mysql> insert into t1(likes) values("sleep,study,eat");
create table t8 (name char(15),sex enum("boy","girl","no"),likes set("game","film","eat","sleeps"));
insert into t8 values("bob","man","it,book");
insert into t8 values("bob","boy","eat,sleeps");
select * from t8;

搭建数据库服务器
MySQL数据类型：
数值类型：整型 浮点
字符类型：char varchar text blob
枚举类型：enum set
日期时间类型：
年  year    YYYY   2018
日期  date   YYYYMMDD    20180711
时间  time   HHMMSS         083000
日期时间    datetime           YYYYMMDDHHMMSS         
	timestamp        20180711093758

use db2
create table t1(
name char(15), 姓名
birthday date, 生日
work     time, 上班时间
s_year   year, 出生年份
meetting datetime 约会时间
);
desc t1;
insert into t1 values("pengyuyan",20181120,220000,1990,20181224203000);
select * from t1;
insert into t1 values("liyifeng",20181120,220000,95,20181224203000),
("liyifeng2",20181120,220000,23,20181224203000);

datetime（8个字节）与timestamp（4个字节）的区别？

create table  t2 (
meetting   datetime,
party      timestamp
);
insert into t2  values   (20170711102356,20191224190000);
insert into t2(party)  values   (20160711102356);
insert into t2(meetting)  values   (20191011102356);
select  * from  t2;

MySQL服务时间函数： MySQL服务内置的命令。
select  now(); 2018-07-18 20:12:25  获取系统日期时间 
select  year( now()  ); 2018 获取系统年份
select  year( 20191224 ); 2019 获取指定时间年份(至少20191224，2019不行)
select  month( now() ); 7 获取系统月份
select  month( 20191224 ); 12 获取指定时间月份
select  day( 20191224 ); 24 获取指定时间几号
select  day( now() ); 18 获取系统时间几号
select  date( now() ); 2018-07-18 获取系统日期 
select  time( now() ); 20:16:58 获取系统时间

insert into  t2 values("bob",date(now()),090000,year(19951223),now());

(重点)数值类型的宽度 是显示宽度，不能限制字段赋值的大小 字段值的大小由类型决定。
create  table   t3 (
name char(5),
age   int(2) unsigned
);
insert into  t3  values("jerry",82119);
create  table   t5 (
id  int(4) unsigned zerofill,
age   int(2) unsigned  zerofill
);
desc  t5;
insert  into  t5  values(5,7);
insert  into  t5  values(21,39);
insert  into  t5  values(199,211);
insert  into  t5  values(9999,9999);
select  * from  t5;
create  table   t6 (
id  int(1) unsigned ,
age   int(1) unsigned  
);

++++++++++++++++++++++++++++
DBA1_DAY02
字段约束条件
修改表结构
MYSQL键值  （重点）
foreign  key 外键 (难点)

一、约束条件 作用控制如何给字段赋值
Null                          | Key     |  Default | Extra
是否允许赋null值         键值         默认值    额外设置
create  table  t7(
name  char(15)  not  null  ,
class  char(7) default   "nsd1804",
age  tinyint(2)  not null  default  19,
sex  enum("boy","girl") not null  default  "boy"
);
desc t7;
insert into  t7(name)values("bob");
select  * from   t7;
insert into t7 values("bob2","nsd1803",21,"girl");
insert into t7 values(null,null,22,"boy");
insert into t7 values("jim",null,22,"boy");
insert into t7 values("null",null,29,"boy");
insert into t7 values("",null,31,"boy");

create table t8(
name char(15) not null default  "",
class char(7) default "nsd1804",
age tinyint(2) not null default 19,
sex enum("boy","girl") not null default "boy"
);
insert into  t8(class,age,sex)values("nsd1802",45,"boy");
select  * from t8;
mysql> desc mysql.user;

修改表结构  :  对已经创建的表的结构做修改：
alter table 库.表  执行动作；
alter table db2.t8 add id int(2);
alter table db2.t8 drop id int(2);
alter table db2.t8 mkdify id int(11);
alter table db2.t8 change id uid int(2);
alter table db2.t8 rename db2.t888;

添加新字段  add  
alter table db2.t8  
add email varchar(50) default "student@tedu.cn" ,
add qq char(11) ;
alter table db2.t8
add stu_num char(9) first,
add likes set("eat","sleeps","game","film") after sex; 
desc t8;
select * from t8;

删除已有字段   
alter table db2.t8 drop email, drop qq;
desc t8;
select * from t8;

修改已有字段类型  modify
* 修改字段类型时，若新的类型与字段已经存储数据冲突，不允许修改。
不修改的部分要原样写一遍，否则就是还原。(比如设置char里有个char(10)的名字，再修改时不能设char或varchar字符位少于10，如char(9)、varchar(9))
alter table  t8 modify  stu_num  varchar(9);
alter  table  t8 modify  
sex  enum('boy','girl',"no") not null  default   "boy";
desc t8;
alter  table  t8 modify   sex  enum('boy','girl',"no") not null  default   "boy" after  name;
select  *  from  t8;

修改 字段名   change
alter  table  t8 change  stu_num  stu_id  varchar(9);
select  *  from  t8;

修改表名 rename
alter  table  t8  rename  stuinfo;

show tables;
select  * from  stuinfo;

+++++++++++++++++++++++++++++++++++++++
MYSQL键值  （重点）  约束如何给字段赋值。
普通索引  index
索引介绍：给字段值排序的树形结构，类似与“书的目录”
汉字个数 5000+
查字典(按字母、笔划、)
stuinfo-----> /var/lib/mysql/db2/stuinfo.*
index
name  age   sex  class
100条记录
算法(笔画 部首  拼音  BTREE  b+tree  hash)
                                二叉树
索引优点:加快查询数据的速度
索引缺点:减慢写入数据的速度 ，占用磁盘空间
使用索引：
index的使用规则？
查看 desc 表名；  key---->MUL
show index from 表；

创建:
把已有表的字段设置为index字段
格式：create index 索引名 on  表名(字段名);
(删除)drop index aaa on stuinfo; (都带on后表名)
desc stuinfo;
show index from stuinfo\G;
create index aaa on stuinfo(name);
desc stuinfo;
show index from stuinfo\G;

创建表时指定index字段
create table t9(
name char(15) not null default "",
class char(7) default "nsd1804",
age tinyint(2) not null default 19,
sex enum("boy","girl") not null default "boy",
index(name),index(class)
);
desc t9;
show index from t9\G;

删除index
drop index aaa on stuinfo;
(创建)create index aaa on stuinfo(name);
desc stuinfo;
show index from stuinfo\G;  
SELECT * FROM  T1  WHERE  NAME="BOB";
++++++++++++++++++++++++
主键     primary  key   限制如何给字段赋值
primary key 使用规则？
建表时创建主键 字段
create table t10(
stu_id char(9) primary key,
name char(10),
age int(2)
);
(已有表上)alter table t10 add primary key(stu_id);
(删除)alter  table  t10  drop  primary  key;
create table t11(
stu_id char(9) ,
name char(10),
age int(2),
primary key(stu_id)
);
desc t10;
desc t11;
insert into t10 values("nsd180401","bob",21);
insert into t10 values("nsd180401","lucy",21);
insert into t10 values(null,"lucy",21);
 
删除主键
alter  table  t10  drop  primary  key;
desc  t10;
insert into  t10  values("nsd180401","lucy",21);
insert into  t10  values(null,"lucy",21); 
select  * from t10;
在已有表里创建主键字段
delete from t10; (有重复值)
     alter table t10 add primary key(stu_id);
desc t10;
创建复合主键： 表中的多个字段一起做主键 ，赋值时，主键字段的值不同时重复。
create  table  t12(
name  char(15),
class  char(7),
pay    enum("yes","no"),
primary key(name,class)
);
PRI       PRI
name     class         pay
bob      nsd1804       yes
bob      nsd1805       no  
lucy     nsd1805       yes

mysql> insert into t12 values("bob","nsd1804","yes");
mysql> insert into t12 values("bob","nsd1804","no");
ERROR 1062 (23000): Duplicate entry 'bob-nsd1804' for key 'PRIMARY'
mysql> insert into t12 values("bob","nsd1805","no");
mysql> insert into t12 values("lucy","nsd1805","yes");

删除复合主键
alter table  t12  drop  primary  key;
insert into   t12  values("bob","nsd1805","no");
select  * from  t12;
在已有表里创建复合主键
delete from t12;
alter table  t12  add  primary  key(name,class);

