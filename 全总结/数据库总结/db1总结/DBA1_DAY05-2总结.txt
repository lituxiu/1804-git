工作中使用crond服务 执行备份脚本（在备份脚本调用备份命令）做数据备份
00  23   *  *  1      /root/allbak.sh
00  23   *  *  2-7 /root/newbak.sh
++++++++++++++++++++++++++++++
3备份数据和数据恢复：
4
完全备份：mysqldum 
]# man  mysqldump
]# mysqldump   -uroot   -p123456   库名  > 目录名 /文件名.sql

库名的表示方式：
--all-databases  或  -A   所有库所有表
库名     备份库下的所有表
库名 表名      备份一张的所有记录
-B 库名1  库名2    备份某几个库的所有数据

完全恢复：mysql
]#mysql -uroot -p123456 库名 < 目录名 /文件名.sql
mysql>  source   目录名 /文件名.sql

]# mkdir  /bakdir
]# mysqldump -uroot -p123456 -A > /bakdir/alldb.sql
]# mysqldump -uroot -p123456 db3 > /bakdir/db3.sql
]# mysqldump -uroot -p123456 db3 user > /bakdir/db3-user.sql
]# mysqldump -uroot -p123456 -B db3 db55 > /bakdir/twodb.sql

50：
mysql> drop table db3.user;
mysql> select * from db3.user;
]# mysql -uroot -p123456 db3 < /bakdir/db3-user.sql
mysql> drop  database  db3;
mysql>  create  database  db3;
]#  mysql  -uroot -p123456   db3  <  /bakdir/db3.sql

db3.user    50
db3-user.sql
mysqldump   备份和恢复会锁表
vim /bakdir/db3-user.sql
lock tables user write
insert into  

每周一  23点备份数据库服务器上db3库下的所有表到系统的/bakdir目录。
]# vim  /root/alldb3.sh
#!/bin/bash
if [ ! -e /bakdir ];then
   mkdir /bakdir
fi       
x=`date  +%F`
mysqldump -uroot -p123456 db3 > /bakdir/db3_${x}.sql  
:wq

]#chmod  +x  /root/alldb3.sh 
]# /root/alldb3.sh 
]# ls /bakdir

]# crontab  -e
00  23  * *  1    /root/alldb3.sh      &>  /dev/null
:wq

++++++++++++++++++++++++++++++++++++
5增量备份与恢复：
1、启用MySQL服务自带的binlog日志 文件
2、安装第3方软件提供的命令innobackupex（读音是：innoback卡）

binlog日志的使用：
日志介绍：是服务日志文件中的一种（默认没有启用） 记录除查询之外的sql命令.
select show tables desc show databases  查
insert update delete  写

启用日志
[mysqld]
server_id=50
log-bin
binlog-format="mixed"
host50-bin.000001 日志文件 > 500M
host50-bin.index  索引文件
查看日志内容
]# mysqlbinlog    host50-bin.000001 

自定义binlog日志名称及存储目录
.
[root@host50 ~]# mkdir /logdir
[root@host50 ~]# chown mysql /logdir/
vim /etc/my.cnf
[mysqld]
log-bin=/logdir/db50
:wq

]# systemctl restart mysqld
]# mysqlbinlog /logdir/db50.000001
日志记录sql命令格式
偏移量   
时间点
]# mysqlbinlog 选项  /logdir/db50.000001
--start-position=数字
--stop-position=数字
--start-datetime="yyyy-mm-dd  hh:mm:ss"
--stop-datetime="yyyy-mm-dd  hh:mm:ss"
执行日志文件记录的sql命令恢复数据
]# mysqlbinlog 选项  日志文件名   |  mysql  -uroot -p123456
]# mysqlbinlog --start-position=616 --stop-position=794 /logdir/db50.000001 | mysql -uroot -p123456
]# mysqlbinlog --start-datetime="2018-07-17 14:21:15"   
--stop-datetime="2018-07-17 14:21:18"  /logdir/db50.000001 | mysql -uroot -p123456
mysql> show master status; 查看正在使用的日志信息
手动生成新的日志文件
]#systemctl restart mysqld
]#mysql -uroot -p123456 -e "flush logs"
mysql> flush logs;
]# mysqldump  -uroot  -p123456  --flush-logs  db3  >  /bakdir/db3.sql
删除已有的日志文件
mysql> purge master logs to "db50.000005";
mysql> reset master;
]#rm -rf /logdir/*
2、安装第3方软件percona提供的命令innobackupex  ***
 yum -y install perl-DBD-mysql perl-Digest-MD5
 rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm 
 rpm -ivh percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 

]#rpm -ql percona-xtrabackup-24
  man xtrabackup
  man innobackupex
命令格式：innobackupex   <选项>
选项
--user   
--password 
完全备份和恢复
]# innobackupex --user root --password 123456 --databases="mysql  performance_schema sys gamedb " /allbak --no-timestamp
]# ls /allbak （备份目录下既有备份的数据又有日志文件）
cat xtrabackup_checkpoints 
完全恢复
--apply-log
--copy-back
(要求数据库目录必须是空的)
1  、准备恢复数据  （回滚备份目录下日志信息）
]#innobackupex --user root  --password 123456    \
--databases="mysql  performance_schema sys gamedb "  \
 --apply-log /allbak  
]# systemctl  stop  mysqld
]# rm  -rf  /var/lib/mysql/*
2、把备份目录下数据库拷贝回数据库目录下
]#innobackupex --user root  --password 123456    \
--databases="mysql  performance_schema sys gamedb " \
--copy-back /allbak
3、修改数据库目录所有者和组用户为mysql
]# chown -R mysql:mysql /var/lib/mysql
启动数据库服务
]# systemctl start mysqld
登录查看数据。
]# mysql -uroot -p123456
mysql> show databases;
mysql> select * from gamedb.a;

增量备份和恢复
从完全备份件里恢复单表
