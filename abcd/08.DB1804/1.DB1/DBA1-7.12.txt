主键
通常和auto_increment 连用 让字段的值自动增长。
                                                         做自加1 计算
         primary  key
          数值类型

向表中插入记录时 不给自动增长的字段赋值，字段的值是如何获得的呢，用当前字段最大的值 +1  后 把结果做 当前新记录字段的值。

create database  db3;
use  db3
create  table   t1(
id        int(2)  primary key  auto_increment,
name   char(15)  not  null,
age     tinyint(2)  unsigned  default  19,
pay    float(7,2)  default  26800
);
insert into   t1 (name,age,pay) values("tom",21,18000);
insert into   t1 (name,age,pay) values("lucy",23,18800);
select  * from  t1;
insert into   t1   values(7,"jerry",23,18800);
insert into   t1 (name,age,pay) values("alice",33,18800);

insert into   t1   values(null,"jerry2",23,18800);

休息到 10:15
+++++++++++++++++++++++++++++++++++++++++++
外键：让当前表字段的值，在另一个表字段值范围里选择。
外键的使用规则？

A表                  B表
name  外键      user
jeryy	       lily   lucy   tom



yginfo
pri
yg_id  name    
1         bob
2         bob
6         lucy
 
首先创建被参考的表 员工信息表
create  table   yginfo(   
yg_id    int(2)  primary key  auto_increment,
name   char(15)
)engine=innodb;

insert into  yginfo(name)values("bob");
insert into  yginfo(name)values("bob");
insert into  yginfo(name)values("lucy");
select  * from  yginfo;

创建外键 
gztab
gz_id  pay
   1      20000
   2      35000
   3       26000
 
create  table   gztab(   
gz_id   int(2), 
pay  float(7,2),
foreign  key(gz_id )   references   yginfo(yg_id)
on  delete cascade     on  update cascade 
)engine=innodb;  

mysql> desc gztab;
mysql> show  create table gztab;

mysql> select  * from gztab;

insert into  gztab  values(1,50000);
insert into  gztab  values(2,25000);
insert into  gztab  values(3,35000);
insert into  gztab  values(4,60000); 错误

休息到 11:20
update   yginfo  set  yg_id=7  where  yg_id=2;
select  * from  yginfo;
select  * from  gztab;

delete  from yginfo where  yg_id=3;
select  * from  yginfo;
select  * from  gztab;


alter table  gztab add primary key(gz_id);  字段值不允许重复和赋null值


删除外键
show  create table  gztab;
alter  table   gztab  drop  foreign key         gztab_ibfk_1;
show  create table  gztab;
+++++++++++++++++++++++++++++++++++++++++++++
DBA1_day03
存储引擎

导出、导入数据 文件存储路径 默认是  /var/lib/mysql-files
mysql> show  variables  like  "secure_file_priv";

自定义数据导出、导入文件存储的目录？
[root@host50 ~]# mkdir /mydata
[root@host50 ~]# chown mysql /mydata/
]#vim /etc/my.cnf
[mysqld]
secure_file_priv="/mydata"
:wq

]#systemctl   restart mysqld

mysql> show  variables  like  "secure_file_priv";

数据导入:把系统文件的内容存储到数据库服务器的表里。
                    有格式规律

导入数据的步骤：
把系统文件拷贝指定的目录下
创建存储文件内容的表
导入数据 (命令格式)



mysql> system  cp /etc/passwd   /mydata/
mysql> system ls /mydata
passwd

create  table  db3.user(
name  char(50),
password  char(1),
uid  int(2),
gid  int(2),
comment   varchar(150),
homedir   char(150),
shell   char(50),
index(name)
);

MySQL> load   data   infile  "/mydata/passwd"  into  table   db3.user   fields  terminated by ":"     lines  terminated by  "\n";

mysql>  select    *  from  user;

alter  table   user   add   id  int(2)  primary key  auto_increment first;

mysql>  select    *  from  user;

mysql>  select    *  from  user  where  id=15;

休息到 15:10
数据导出：把数据库服务器的表里的记录存储到系统文件里。

mysql>   sql查询命令   into  outfile  "目录名/文件名"；


select  * from t1  into  outfile  "/mydata/t1.txt"；

select  * from t1  into  outfile  "/mydata/t2.txt" fields  terminated by "#";

mysql> select  * from t1  into  outfile  "/mydata/t3.txt" fields  terminated by "#"   lines terminated by "!!!";

++++++++++++++++++++++++++++++++++
管理表记录 db3.user
添加新记录 insert  into
查询记录  select
更新记录字段的值  update
删除记录  delete


添加新记录 insert  into

insert into  user    
values
(42,"bob","x",2000,2000,"student user","/home/bob","/bin/bash");

insert into  user    
values
(45,"bob","x",2000,2000,"student user","/home/bob","/bin/bash"),
(43,"bob","x",2000,2000,"student user","/home/bob","/bin/bash"),
(44,"bob","x",2000,2000,"student user","/home/bob","/bin/bash");

insert into  user (name,shell,uid)   
values
("lucy","/sbin/nologin",1998);

insert into  user (name,shell,uid)   
values
("tom","/sbin/nologin",1928),
("alice","/sbin/nologin",1948);

休息到  16:10

查询记录  select
select  字段名列表 from   表  where   条件；

select  *   from  user;

select  name,uid,shell   from  user;

select  name,uid,shell   from  user  where   id=1;

select  name,uid,shell   from  user  where  shell="/bin/bash";


更新记录字段的值  update
update   表   set  字段名=值，字段名=值 ，.... where  条件;
select  password  , gid  from user;

update  user  set  password="A",gid=1000;
update  user  set  password="x" where  id=1;

select  password  , gid  from user;


删除记录  delete   (删除表里的行)
delete  from  表 where  条件；

delete  from  t1;
select *  from  t1;

select *  from  user  where   name="bob";

delete  from  user  where   name="bob";

select *  from  user  where   name="bob";

对记录做select  update  delete时可以使用的条件的表示方式：

数值比较   >   >=  <  <=  =  !=

where    字段名    符号   数值

select  * from user where id <= 10;

select  name,uid  from  user where  uid=9;
 
select  name,uid,gid  from user where  uid=gid;

select  id , gid  from user  where  id=7;

update  user  set  gid=6  where  id=7;

select  id , gid  from user  where  id=7;


字符比较   =   !=
where  字段名    符号  “值”

select  name from user where  name="apache";
select  name,shell from user where  shell != "/bin/bash";

update user  set  gid=2000 where  shell="/sbin/nologin";
select  gid,shell from user where  shell = "/sbin/nologin";

休息到 17:10

匹配空    is  null 
匹配空    is  not  null 

insert into  user(id,name)values(51,""),(52,"null"),(53,null);
select  id,name  from user  where  id>=51;

select  id,name  from user  where  name is null;
select  id,name  from user  where  name="null";

select  id,name  from user  where  name="";

select  name ,shell  from user  where  shell  is not null;
select  id, name ,shell  from user  where  shell  is  null;

update  user set  password=null where name="bin";
select  *  from user  where name="bin";

逻辑比较  and(与)   or（或）     !  not（非）

select   *  from user   where  name="root"   and   uid=1  and  shell="/bin/bash";
 

select  name,uid  from user   where  name="root"  or   uid=1;

( ) 提高执行顺序

select  name,uid  from user   
where  name="root" or   name="bin"   and    uid=1;


select  name,uid  from user   
where  ( name="root" or   name="bin"  )  and    uid=1;


范围内匹配

select  name from user 
where  name  in ("root","sync","lucy","bob"); 

select  name,uid from user where  uid  in (1,7,27,1000); 

select  name,shell  from user where  shell  not in ("/bin/bash","/sbin/nologin");


select  *  from   user where  uid  between  10 and 20;
select  *  from   user where  uid >=10 and uid<=20;

distinct  (只适合select查询使用)

select  shell  from user;
select   distinct shell  from user;

select    shell  from user  where  uid <= 500;
select   distinct shell  from user  where  uid <= 500;

/var/ftp/nsd1804/mysql/day03.txt
周五  全天自由复习
































