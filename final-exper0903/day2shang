nginx和php的连接状态的配置与查看

nginx ~]# vim /usr/local/nginx/conf/nginx.conf
 location /status { 注意这里的/不能后跟空格,否则重启nginx服务会报错
        stub_status on; 如果只写这一行,我所有的监测请求都会被记录到访问日志里
        access_log off; 所有加多这一行不记录所有的监控请求
        }
       location ~ \.php$ { 在这一行的上行添加以上内容
不过为了区分与apache的,在这里把location /status改为location /nginx-status

安全版status设置(在这里不设置,需学懂)
location /nginx-status {
   allow 192.168.0.0/16;
   deny all;   (这里的allow和deny是只允许192.168.0.0网段访问,其它主机全拒绝)
   stub_status on;
   access_log off;
}
设置完后检查语法是否有错
nginx ~]# /usr/local/nginx/sbin/nginx -t
nginx ~]# systemctl restart nginx
nginx ~]# curl 192.168.1.81/nginx-status
Active connections: 1 
server accepts handled requests
 5 5 5 
Reading: 0 Writing: 1 Waiting: 0

nginx ~]# vim /usr/local/php/etc/php-fpm.d/www.conf 
命令模式/status 去找;pm.status_path = /status这行
把前面的;分号注释去掉,后保存退出
nginx ~]# systemctl restart php-fpm
nginx ~]# curl 192.168.1.81/status
报错404 Not Found,区配不到

耍小聪明,把pm.status_path = /status改为pm.status_path = /status.php
因为location ~ \.php$这个区配条件,否则自己再加个location区配条件
nginx ~]# systemctl restart php-fpm
nginx ~]# curl 192.168.1.81/status.php  访问成功
pool:                 www
process manager:      ondemand
start time:           05/Sep/2018:15:46:32 +0800
start since:          5
accepted conn:        1
listen queue:         0
max listen queue:     0
listen queue len:     128
idle processes:       0
active processes:     1
total processes:      1
max active processes: 1
max children reached: 0

以上两种就是查看nginx和php状态的方法
++++++++++++++++华丽的分隔线++++++++++++++++
apache配置文件

apache ~]# vim /etc/httpd/conf.modules.d/00-base.conf
命令模式/info
LoadModule info_module modules/mod_info.so
(找到info_module modules/mod_info.so)

新建一个info.conf文档启动模块
apache ~]# vim /etc/httpd/conf.d/info.conf
通过apache官网手册http://httpd.apache.org/docs/2.4/去配置
找左侧的modules(模块),再选i开头字母找mod_info,看mod_info里的summary(摘要),如下
<Location "/server-info">   名字
    SetHandler server-info  这是启用的关键字
</Location>

设置好后结果cat /etc/httpd/conf.d/info.conf
<Location "/httpd-info">
    SetHandler server-info
</Location>
重启apache服务
apache ~]# apachectl restart   (或apachectl graceful)
再在浏览器里输入http://192.168.1.82/httpd-info得到的是
(模块名字和配置文件书写方式,这是配置信息.没有连接的状态信息)

再在apache官网手册找S开头的mod_status模块
<Location "/server-status">
    SetHandler server-status
    Require host example.com
</Location>

修改后
cat /etc/httpd/conf.d/info.conf
<Location "/httpd-info">
    SetHandler server-info
</Location>

ExtendedStatus On
<Location "/httpd-status">
    SetHandler server-status
</Location>

apache ~]# apachectl restart
在浏览器里输入http://192.168.1.82/httpd-status

+++++++++++++++++++++++华丽的分隔线++++++++++++++
配置lnmp和lamp中的mysql服务
把之前的mysql包从真机上拷贝到nginx和mysql主机上(1.81和1.82地址)
]# scp -P 10022 '/root/桌面/nosql包/db1/mysql-5.7.17.tar'  192.168.1.81:/root
nginx ~]# mkdir mysql
nginx ~]# tar -xf mysql-5.7.17.tar -C mysql/
nginx ~]# yum -y install mysql/*

nginx ~]# ls /var/lib/mysql/
nginx ~]# vim /etc/my.cnf
nginx ~]# systemctl start mysqld
nginx ~]# ls /var/lib/mysql/
auto.cnf         ib_logfile0         private_key.pem
ca-key.pem       ib_logfile1         public_key.pem
ca.pem           ibtmp1              server-cert.pem
client-cert.pem  mysql               server-key.pem
client-key.pem   mysql.sock          sys
ib_buffer_pool   mysql.sock.lock
ibdata1          performance_schema
nginx ~]# grep "password" /var/log/mysqld.log 
2018-09-05T09:31:44.831168Z 1 [Note] A temporary password is generated for root@localhost: ?s_oh;YfD2=t
nginx ~]# mysql -uroot -p"?s_oh;YfD2=t"
mysql> set global validate_password_policy=0;
mysql> set global validate_password_length=6;
mysql> set password="123456";
真机上scp -P10022 '/root/桌面/exper1803/02/mydb.sql' 192.168.1.81:/root
把mydb.sql导入数据库
nginx ~]# mysql -uroot -p123456 <mydb.sql 
mysql> show databases;
 information_schema 
 mydb  多出这一个库               
 mysql              
 performance_schema 
 sys  

mysql> use mydb;
mysql> show tables;
 myscript 
 myusers  (有两个表)

把exper文件里的02文件夹分别scp到nginx和apache主机(1.81和1.82)
daxiuge888 ~]# scp -P10022 -r '/root/桌面/exper1803/02'  192.168.1.81:/root 

nginx ~]# cp 02/*.php /usr/local/nginx/html/
[root@nginx ~]# ls /usr/local/nginx/html/
50x.html    info.php       testphp.php
index.html  testmysql.php
(testphp.php和testmysql.php是查询数据库的返回结果)
9月4日 上午98分钟


