启动主机192.168.4.50  配置要求如下：
禁用selinux
关闭防火墙
配置好yum源
配置固定ip地址192.168.4.50
主机名  host50

ftp   172.40.50.117   
2018/soft/  软件
2018/notedir/  笔记
2018/homedir/  练习题

vnc  端口号 7000
+++++++++++++++++++++++++++++++
庞丽静
静静
工作邮箱  panglj@tedu.cn
8:30
9:00
18:00
+++++++++++++++++++++++++++++
授课大纲 

数据库管理  15天    DBA  理论多   知识点  命令多  练习时间少  晚自习
                                                               
15天的学习内容   mysql   redis  mongodb
                          每隔天有1次试验 

MySQL_day01
搭建数据库服务器
什么是数据库？存储数据的仓库

部署一台数据库，提供数据库存储服务？

购买服务器 （硬件主机  云主机 ）

安装操作系统： Unix    Linux   Windows
                                   redhat7.4   2017
                                   
装包
软件包的来源？ 官网下载  XXX.主.次.修改次数 
                        操作系统光盘自带软件

软件包封包类型（RPM  源码）？ 
源码 可以自定义配置和安装 必须解决依赖关系
RPM  软件是封装好不可以自定义安装  安装卸载简单
                                                          rpm  -ivh   rpm -e 

开源软件还是商业软件？ 
开源不等于免费

使用那种版本软件？（提供数据库服务的软件有哪些？）
                                Mysql   Oracle  SQL server  DB2 (  RDBMS )
                                按照一定的规则存储数据                                  
姓名  性别  籍贯  身份证

	               Redis   Mongodb  Memcached	 (NoSQL)
                                                              key   values
                                                              X        101
Mysql的特点：
开源且跨平台： unix  linux   windows
支持主流的编程语言：php  java   python  ruby  perl 
可移植性好： 系统只要有C 运行环境

A
/usr/local/mysql/
scp  -r  /usr/local/mysql/  b:/usr/local/

B
yum  -y  install gcc   gcc-c++
/usr/local/mysql/

数据库服务通常和网站服务一起使用：LAMP   LNMP
                                                      Mysql  Mongodb

购物网站  游戏网站  视频网站  论坛网站  金融网站

数据库服务用来存储什么样数据：


mysql-5.7.17.tar   
mysql-community-server-5.7.17-1.el7.x86_64.rpm
mysql-community-client-5.7.17-1.el7.x86_64.rpm

装包
rpm  -qa  | grep -i mariadb
systemctl  stop  mariadb
rpm -e --nodeps mariadb-server
rpm -e --nodeps mariadb-libs
rm  -rf  /var/lib/mysql/*
rm  -rf /etc/my.cnf

yum  -y  install  perl-JSON
rpm  -Uvh  mysql-community-*.rpm
rpm -qa | grep -i mysql

修改配置文件 /etc/my.cnf



启动服务
   30  systemctl  start  mysqld
   31  systemctl  status  mysqld
   32  ls /var/lib/mysql
   33  systemctl  enable  mysqld

查看服务信息
端口号 3306     netstat  -utnlp | grep  mysqld
进程 mysqld   ps  -C  mysqld


]# grep password /var/log/mysqld.log

2018-07-10T02:46:42.233732Z 1 [Note] A temporary password is generated for root@localhost: PjCJW&is,8jV

把数据存储到数据库服务器上的过程？
1 连接数据库服务器  
]#mysql  -hlocalhost   -uroot   -p'密码'
mysql> set global validate_password_policy=0;
mysql> set global validate_password_length=6;
mysql> alter user  root@"localhost" identified by "123456";
mysql> show  databases;
mysql> quit

]#mysql  -hlocalhost   -uroot   -p123456
mysql> show  databases;
使用SQL （结构化查询语言）命令 管理数据库， 
SQL命令的使用规则和分类？
2 创建库  相当于系统的文件夹（查看  创建  切换  删除）
show databases;
create database  库名；
select  database();
use  库名；
show tables;
drop  database  库名；


数据库名的命名规则？

3 创建表 （ 相当于系统文件）
* 表必须在库里创建
（创建表 查看内容  查看表结构   删除表  写入数据）
学生信息

vim /root/stu.txt
字段名
姓名     性别  年龄   电话  
赵志斌  男     21    8888888  记录
小红     女     18    9888888
:wq


create  database  studb;

create  table   studb.stuinfo(
name   char(15),
sex      char(10),
age     int,
tel       char(11)  
);

desc  studb.stuinfo;
select  * from studb.stuinfo;

4 插入数据
insert into  studb.stuinfo  values("bob","boy",21,"8888888"),("zhaozhibin","boy",19,"66666666");

select  * from studb.stuinfo;
update studb.stuinfo set sex="girl";
delete from studb.stuinfo;
select  * from  studb.stuinfo;
drop table stuinfo;
show tables;
5 断开连接
>quit;
指定表的字符集 可以存储中文数据
use  studb;

create  table  studb.学生表 (姓名  char(10) , 年龄 int)
DEFAULT CHARSET=utf8;

alter  table  studb.学生表  DEFAULT CHARSET=utf8;

show  create  table  学生表；

insert into studb.学生表  values("张三丰",108);

select  * from  学生表;
休息到16:15




MySQL数据类型

数值类型 
整数类型    11   +11
               -11

create  database  db1;
use db1;

create  table t1(level  tinyint);
desc t1;
select  * from t1;
insert into   t1  values(-1);
insert into   t1  values(99);
insert into   t1  values(256);

create  table t2(level  tinyint  unsigned);
desc t2;
select  * from t2;

insert into   t2  values(-1);
insert into   t2  values(99);
insert into   t2  values(256);

浮点类型  

整数.小数   总位数
1029.33        6

create table  t3 (pay  float(5,2));

insert  into  t3  values(1118.23);
insert into  t3  values(118.23);
insert into  t3  values(19);

xxx.xx
999.99
-999.99

xxxxx.xx
99999.99
        0.00
-99999.99

字符类型
char （255）  定长  
varchar（ 65532） 变长  

大文本类型
text
blob
/root/media/film/xxx.avi
 音频文件   图片   视频文件

create  table   t5(name  char(5))
insert into   t5  values  ("bob"),("ab");

name
  bob
   ab


create  table   t6(name  varchar(5))
insert into   t6  values  ("bob"),("ab");

name
bob
ab

class  nsd1804 char(7)
email  varchar(30)
xxxx@163.com
        @yahoo.net
        @sina.com.cn

create  table   t7  (
gamename char(15), level smallint unsigned , pay  float(7,2) );

desc  t7;

 insert into  t7  values("zbj",250,1880.22);


枚举类型 ： 让字段的值 在规定的范围内选择
enum(值列表)  单选
set(值列表)  多选

create  table   t8  ( name  char(15),sex  enum("boy","girl","no"),likes  set("game","film","eat","sleeps") );

insert into   t8  values("bob","man","it,book");
insert into   t8  values("bob","boy","eat,sleeps");
select  * from t8;

搭建MySQL数据库服务器 并设置数据库管理员root用本机登陆密码为123456


课后练习：
在主机51-55 运行MySQL数据库服务并设置数据库管理员root用本机登陆密码为123456


创建一张表存储前任的信息。
db2  库   dogperson表  

课堂笔记： 117 
/var/ftp/nsd1804/mysql/day01.txt

+++++++++++++++++++++++++++++
搭建数据库服务器
MySQL数据类型：
数值类型： 整型  浮点
字符类型： char   varchar   text  blob
枚举类型： enum   set
日期时间类型：
年  year    YYYY   2018
日期  date   YYYYMMDD    20180711
时间  time   HHMMSS         083000
日期时间    datetime           YYYYMMDDHHMMSS         
	timestamp        20180711093758

use  db2
create  table  t1(
name char(15),  姓名
birthday   date,  生日
work       time,   上班时间
s_year     year,   出生年份
meetting   datetime   约会时间
);
desc  t1;
insert into  t1  values("pengyuyan",20181120,220000,1990,20181224203000);

select  * from  t1;

insert into  t1  values("liyifeng",20181120,220000,95,20181224203000),
("liyifeng2",20181120,220000,23,20181224203000);

datetime 与 timestamp 的区别？

create table  t2 (
meetting   datetime,
party         timestamp
);

insert into t2  values   (20170711102356,20191224190000);
insert into t2(party)  values   (20160711102356);

insert into t2(meetting)  values   (20191011102356);

select  * from  t2;

MySQL服务时间函数： MySQL服务内置的命令。

select  now();  获取系统日期时间
select  year( now()  );  获取系统年份
select  year( 20191224 );   获取指定时间年份
select  month( now() );   获取系统月份
select  month( 20191224 ); 获取指定时间月份
select  day( 20191224 ); 获取指定时间几号
select  day( now() );  获取系统时间几号
select  date( now() ); 获取系统日期 
select  time( now() ); 获取系统时间


insert into  t2 values("bob",date(now()),090000,year(19951223),now());

数值类型的宽度 是显示宽度，不能限制字段赋值的大小 字段值的大小由类型决定。

create  table   t3 (
name char(5),
age   int(2) unsigned
);

insert into  t3  values("jerry",82119);

create  table   t5 (
id  int(4) unsigned zerofill,
age   int(2) unsigned  zerofill
);

desc  t5;
insert  into  t5  values(5,7);
insert  into  t5  values(21,39);
insert  into  t5  values(199,211);
insert  into  t5  values(9999,9999);
select  * from  t5;

create  table   t6 (
id  int(1) unsigned ,
age   int(1) unsigned  
);

++++++++++++++++++++++++++++
DBA1_DAY02
字段约束条件
修改表结构

MYSQL键值  （重点）

foreign  key 外键 (难点)

一、约束条件 作用控制如何给字段赋值
Null                          | Key     |  Default | Extra
是否允许赋null值         键值         默认值    额外设置


create  table  t7(
name  char(15)  not  null  ,
class  char(7) default   "nsd1804",
age  tinyint(2)  not null  default  19,
sex  enum("boy","girl") not null  default  "boy"
);
desc t7;

insert into  t7(name)values("bob");
select  * from   t7;

insert into  t7    values("bob2","nsd1803",21,"girl");

insert into  t7    values(null,null,22,"boy");

insert into  t7    values("jim",null,22,"boy");

insert into  t7    values("null",null,29,"boy");
insert into  t7    values("",null,31,"boy");


create  table  t8(
name  char(15)  not  null  default  "",
class  char(7) default   "nsd1804",
age  tinyint(2)  not null  default  19,
sex  enum("boy","girl") not null  default  "boy"
);

insert into  t8(class,age,sex)values("nsd1802",45,"boy");
select  * from t8;

mysql> desc mysql.user;
修改表结构  :  对已经创建的表的结构做修改：



alter  table  库.表  执行动作；

添加新字段  add  
alter  table  db2.t8  
add  email  varchar(50)  default  "student@tedu.cn" ,
add  qq       char(11) ;

alter  table  db2.t8
add   stu_num  char(9)  first,
add   likes  set("eat","sleeps","game","film")  after sex; 

desc  t8;

select   *  from  t8;


删除已有字段   
alter  table  db2.t8  drop  email ,  drop  qq;
desc  t8;
select  *  from  t8;

修改已有字段类型  modify
* 修改字段类型时，若新的类型与字段已经存储数据冲突，不允许修改。
不修改的部分要原样写一遍，否则就是还原。

alter table  t8 modify  stu_num  varchar(9);

alter  table  t8 modify  
sex  enum('boy','girl',"no") not null  default   "boy";

desc t8;

alter  table  t8 modify   sex  enum('boy','girl',"no") not null  default   "boy" after  name;
  
select  *  from  t8;

修改 字段名   change
alter  table  t8 change  stu_num  stu_id  varchar(9);
select  *  from  t8;

修改表名 rename
alter  table  t8  rename  stuinfo;
show tables;
select  * from  stuinfo;

休息到  15:30
+++++++++++++++++++++++++++++++++++++++
MYSQL键值  （重点）  约束如何给字段赋值。
普通索引  index

索引介绍：给字段值排序的树形结构，类似与“书的目录”

汉字个数 5000+
查字典

目录页 1-----500
正文    501--------5000

拼音方式查找
a      1.........100
b
c
...

z


笔画方式查找
一划   101........301

....


二十划

部首方式查找
      302........ 500


stuinfo-----> /var/lib/mysql/db2/stuinfo.*
index
name  age   sex  class
100条记录
算法(笔画 部首  拼音  BTREE  b+tree  hash)
                                二叉树

索引优点  ：加快查询数据的速度
索引缺点  :减慢写入数据的速度 ，占用磁盘空间

使用索引：
index的使用规则？
查看  desc   表；  key  ----> MUL
        show  index  from 表；

创建:
把已有表的字段设置为index字段
desc  stuinfo;
show  index from stuinfo\G;
                create index  aaa on  stuinfo(name);
desc  stuinfo;
show  index from stuinfo\G;

创建表时指定index字段
create  table  t9(
name  char(15)  not  null  default  "",
class  char(7) default   "nsd1804",
age  tinyint(2)  not null  default  19,
sex  enum("boy","girl") not null  default  "boy",
index(name),index(class)
);

desc  t9;
show  index from  t9\G;

删除index
drop index   aaa  on  stuinfo;
desc  stuinfo;
show  index from stuinfo\G;  

SELECT  * FROM  T1  WHERE  NAME="BOB";
++++++++++++++++++++++++
主键     primary  key   限制如何给字段赋值
primary key 使用规则？


建表时创建主键 字段
create table  t10(
stu_id   char(9)  primary key,
name  char(10),
age  int(2)
);

create table  t11(
stu_id   char(9) ,
name  char(10),
age  int(2),
primary key(stu_id)
);
desc  t10;
desc  t11;

 insert into  t10  values("nsd180401","bob",21);
 insert into  t10  values("nsd180401","lucy",21);
 insert into  t10  values(null,"lucy",21);
 
删除主键
alter  table  t10  drop  primary  key;
desc  t10;
insert into  t10  values("nsd180401","lucy",21);
insert into  t10  values(null,"lucy",21); 
select  * from t10;

在已有表里创建主键字段
delete from  t10; (有重复值)
     alter  table   t10  add   primary  key(stu_id);
desc  t10;

创建复合主键： 表中的多个字段一起做主键 ，赋值时，主键字段的值不同时重复。
create  table  t12(
name  char(15),
class  char(7),
pay    enum("yes","no"),
primary key(name,class)
);
PRI       PRI
name   class             pay
bob      nsd1804       yes
bob      nsd1805       no
lucy     nsd1805       yes

mysql> insert into   t12  values("bob","nsd1804","yes");

mysql> insert into   t12  values("bob","nsd1804","no");
ERROR 1062 (23000): Duplicate entry 'bob-nsd1804' for key 'PRIMARY'

mysql>  insert into   t12  values("bob","nsd1805","no");
mysql> insert into   t12  values("lucy","nsd1805","yes");


删除复合主键
alter table  t12  drop  primary  key;

insert into   t12  values("bob","nsd1805","no");
select  * from  t12;

在已有表里创建复合主键
delete from t12;
alter table  t12  add  primary  key(name,class);
+++++++++++++++++++++++++++++++++++++
/var/ftp/nsd1804/mysql/day02.txt





外键       *











全文索引

foreign  key 外键 (难点)














